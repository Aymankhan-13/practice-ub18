pipeline {
    agent none
    stages {
        stage('BuildAndTest') {
            matrix {
                axes {
                    axis {
                        name 'OS'
                        values 'red', 'blue'
                    }
                }

                when {
                    expression { ${OS}.equalsIgnoreCase('red') }
                        stage ('ubuntu 18.04'){
                                agent {
                                    docker {
                                        image 'vtpl/ubuntu_build:18.04'
                                        alwaysPull true
                                        reuseNode true
                                        }
                                    }
                                }
                    }


                when {
                    expression { ${OS}.equalsIgnoreCase('blue') }
                        stage ('ubuntu 20.04'){
                            agent {
                                docker {
                                    image 'vtpl/ubuntu_build:20.04'
                                    alwaysPull true
                                    reuseNode true
                                    }
                                }
                            }
                    }

                stages {
                    stage('Build') {
                        environment {
                            VCPKG_DEFAULT_BINARY_CACHE = '${WORKSPACE}/vcpkg_cache'
                        }
                        steps {
                            dir('vcpkg_cache') {
                                writeFile file:'dummy', text:''
                            }
                            dir('thirdparty/vcpkg') {
                                checkout([$class: 'GitSCM', branches: [[name: 'fb02a785618a1fbaced32b206171e09fd57d4622']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/Microsoft/vcpkg.git']]])
                            }
                            dir('process_runnner') {
                                git branch: 'main', url: 'https://github.com/md-w/process_runnner.git'
                                cmakeBuild buildDir: 'build', buildType: 'Release', cleanBuild: true, cmakeArgs: '-DVCPKG_OVERLAY_TRIPLETS:STRING=${WORKSPACE}/process_runnner -DVCPKG_TARGET_TRIPLET:STRING=x64-win-linux-mixed -DCMAKE_TOOLCHAIN_FILE:STRING=${WORKSPACE}/thirdparty/vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_C_COMPILER_LAUNCHER:STRING=ccache -DCMAKE_CXX_COMPILER_LAUNCHER:STRING=ccache -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_C_COMPILER:FILEPATH=/usr/bin/clang -DCMAKE_CXX_COMPILER:FILEPATH=/usr/bin/clang++', generator: 'Ninja', installation: 'InSearchPath', steps: [[withCmake: true]]
                                archiveArtifacts artifacts: 'build/entry_point_server/entry_point_server', fingerprint: true, followSymlinks: false, onlyIfSuccessful: true
                            }
                        }
                    }
                }
            }
        }
    }
}
